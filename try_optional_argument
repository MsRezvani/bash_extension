#!/bin/bash
interval=5
number=12
command=NULL
############################################################
### Read From Environment Variable
############################################################
function read_from_env {
    if [[ -v TRY_INTERVAL ]]; then
        interval="${TRY_INTERVAL}"
    fi
    if [[ -v TRY_NUMBER ]]; then
        number="${TRY_NUMBER}";
    fi
    if [[ -v TRY_COMMAND ]]; then
      command="${TRY_COMMAND}"
    fi
}

############################################################
### Read From Command Line
############################################################
function read_from_cli {
  if [[ $* == *"-n"* || $* == *"-i"* ]]; then
    for i in {1..2} ; do
        case $1 in
          -i)
              shift
              interval=$1
              shift
            ;;
          -n)
            shift
            number=$1
            shift
            ;;
        esac
    done
  fi
  command=$*
}

###############################################################
## Read Argument
###############################################################
function read_argument {
  # Read From ENV
  read_from_env

  # Read from CLI
  read_from_cli $*

  if [[ -z $command || $command == NULL ]]; then
    echo "Command is null!" >&2
    exit 2
  fi
}

##################################################
## execute any command with any number of parameter
##################################################
function exe_command {
  #Command like: flask app test ......
  $* 2> /dev/null
  if [[ $? -eq 0 ]]; then
    exit 0
  fi
}

#################################################
## Try to Execute Command With Number of Iteration that specify in the Input's Argument with "-n Parameter"
#################################################
function try_to_execute_command {
  #Command like: flask app test ......
  for i in $(seq 1 $number) ; do
     echo "command not found. try to execute it after : ${interval} sec."
     sleep $interval
     exe_command $*
  done

}

################################################
## Main Entry Point to Execute
################################################
function main {
  read_argument $*
  exe_command ${command[*]}
  ## if ( command properly executed)  THEN exit with 0 ELSE try to Execute it with -n Parameter.
  try_to_execute_command ${command[*]}
  ## if (Command not Property executed yet) THEN exit 1
  echo "can not executed Command Part!" >&2
  exit 1
}

main $*
echo $?
